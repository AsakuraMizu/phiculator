// Original source: https://www.tero.co.uk/des/
// Source: https://lchzh3473.gitee.io/rks-probe/
// Provided by: lchzh1473

export default function des2(t: string): string {
  let e: number, r: number, o: number, h: number;
  let C = window.atob(t);
  const a = [
      16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024,
      16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752,
      16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4,
      16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4,
      16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028,
      16778240, 16778240, 0, 65540, 66560, 0, 16842756,
    ],
    c = [
      -2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616,
      -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344,
      1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0,
      1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576,
      -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272,
      1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608,
      -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040,
      -2146402272, 1081344,
    ],
    d = [
      520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736,
      131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800,
      134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728,
      134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320,
      134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592,
      131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584,
    ],
    n = [
      8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129,
      0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320,
      8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800,
      8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193,
      8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928,
    ],
    A = [
      256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288,
      33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112,
      1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0,
      1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432,
      1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976,
      1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720,
      0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976,
      1073742080,
    ],
    l = [
      536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704,
      4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384,
      4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688,
      541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928,
      4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704,
      541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0,
      541081600, 536870912, 4194320, 536887312,
    ],
    f = [
      2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0,
      67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866,
      69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200,
      67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864,
      67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016,
      2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154,
    ],
    i = [
      268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600,
      268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240,
      262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144,
      266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520,
      268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520,
      268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456,
      268701696,
    ],
    g = [
      134873602, 134228224, 16789505, 604700676, 83894272, 67702788, 84148236, 331780, 67436808,
      331778, 337707305, 266240, 270606632, 537264160, 268501296, 604635172, 656384, 169878272,
      34079744, 136323081, 34605056, 3154952, 34603008, 288367640, 704643584, 286262792, 671221248,
      303041536, 134873602, 436209664, 287318033, 537526278,
    ],
    u = C.length;
  const s = [30, -2, -2];
  let m = 8 - (u % 8),
    S = 0,
    b = 1342195456,
    p = 1375752960,
    j = '';
  for (C += String.fromCharCode(m).repeat(m); S < u; ) {
    (o = b),
      (h = p),
      (b = e =
        (C.charCodeAt(S++) << 24) |
        (C.charCodeAt(S++) << 16) |
        (C.charCodeAt(S++) << 8) |
        C.charCodeAt(S++)),
      (p = r =
        (C.charCodeAt(S++) << 24) |
        (C.charCodeAt(S++) << 16) |
        (C.charCodeAt(S++) << 8) |
        C.charCodeAt(S++)),
      (e ^= (m = 252645135 & ((e >>> 4) ^ r)) << 4),
      (e ^= (m = 65535 & ((e >>> 16) ^ (r ^= m))) << 16),
      (e ^= m = 858993459 & (((r ^= m) >>> 2) ^ e)),
      (e ^= m = 16711935 & (((r ^= m << 2) >>> 8) ^ e)),
      (e = ((e ^= (m = 1431655765 & ((e >>> 1) ^ (r ^= m << 8))) << 1) << 1) | (e >>> 31)),
      (r = ((r ^= m) << 1) | (r >>> 31));
    for (let t = s[0]; t != s[1]; t += s[2]) {
      const o = r ^ g[t],
        h = ((r >>> 4) | (r << 28)) ^ g[t + 1];
      (m = e),
        (e = r),
        (r =
          m ^
          (c[(o >>> 24) & 63] |
            n[(o >>> 16) & 63] |
            l[(o >>> 8) & 63] |
            i[63 & o] |
            a[(h >>> 24) & 63] |
            d[(h >>> 16) & 63] |
            A[(h >>> 8) & 63] |
            f[63 & h]));
    }
    (m = e),
      (e = r),
      (r = ((r = m) >>> 1) | (r << 31)),
      (r ^= m = 1431655765 & (((e = (e >>> 1) | (e << 31)) >>> 1) ^ r)),
      (r ^= (m = 16711935 & ((r >>> 8) ^ (e ^= m << 1))) << 8),
      (r ^= (m = 858993459 & ((r >>> 2) ^ (e ^= m))) << 2),
      (r ^= m = 65535 & (((e ^= m) >>> 16) ^ r)),
      (r ^= m = 252645135 & (((e ^= m << 16) >>> 4) ^ r)),
      (e ^= m << 4),
      (e ^= o),
      (r ^= h),
      (j += String.fromCharCode(
        e >>> 24,
        (e >>> 16) & 255,
        (e >>> 8) & 255,
        255 & e,
        r >>> 24,
        (r >>> 16) & 255,
        (r >>> 8) & 255,
        255 & r
      ));
  }
  return (function (t) {
    let e = '';
    for (let r = 0; r < t.length; r += 2) {
      const o = t.charCodeAt(r),
        h = t.charCodeAt(r + 1);
      e += String.fromCharCode((h << 8) + o);
    }
    return e;
  })(j.slice(0, -j.charCodeAt(j.length - 1)));
}
